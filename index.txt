
.. _documentation:

Documentation
=============

Research in sound field synthesis relies mainly on numerical implementations.
The SFS Toolbox is an effort to ensure reproducibility of the results
[Donoho2009]_.  It provides a common code based, which is accessible to
everyone. This ensures that possible implementation errors are documented and
can be found by everyone as well as those errors cannot be avoided [Ince2012]_.

The first
implementation was done under Matlab/Octave. This version includes a fast
variety of algorithms to make numerical simulations of different sound field
synthesis systems. For getting started with this version have a look at the
`Matlab Toolbox <matlab/#sec-matlab>`_ part of the documentation.

In recent time, Python has become more common in the signal processing
community, so we started a port of the SFS Toolbox to work under Python. This
version is not as complete as the Matlab version and focuses mainly on
simulations for monochromatic frequencies. To get started have a look at the
`Python Toolbox <python/#sec-python>`_ part.

On the other hand, the theory of sound field synthesis is not completely settled
yet and the best solutions for some driving functions are still under dispute or
have not been derived.  In order to provide a comprehensive and up-to-date
review of the current theory on sound field synthesis, we summarize the theory
in the `Mathematical Fundamentals <math/>`_ section.  This enables to provide
the implemented equations in the code directly with references to the underlying
theory.

.. [Donoho2009] Donoho, D. L., Maleki, A., Rahman, I. U., Shahram, M., and Stodden, V., “Reproducible Research in Computational Harmonic Analysis,” Comput. Sci. Eng. **11**, 8–18 (2009).

.. [Ince2012] Ince, D. C., Hatton, L., and Graham-Cumming, J., “The case for open computer programs,” Nature **482**, 485–488 (2012).

.. vim: filetype=rst spell:
