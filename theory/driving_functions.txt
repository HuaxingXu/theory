.. _sec-driving-functions:

Driving Functions
-----------------

In the following, driving functions for Near-Field Compensated Higher
Order Ambisonics, the Spectral Division Method and Wave Field Synthesis
are derived for spherical, circular, and linear secondary source
distributions. Among the possible combinations of methods and secondary
sources not all are meaningful. Hence, only the relevant ones will be
presented. The same holds for the introduced source models of plane
waves, point sources, line sources and focused sources. [AhrensSpors2010]_
in addition have considered Spectral
Division Method driving functions for planar secondary source
distributions.

The driving functions are given in the temporal-frequency domain. For
some of them, especially in the case of WFS an analytic solution in the
temporal domain exists and is presented. For NFC-HOA, temporal-domain
implementations for the cases are available for a plane wave and a point
source as source models. The derivation of the implementation is not
explicitly shown here, but is described in [Spors2011]_.

The cases are illustrated in the following by companion figures, because
only those cases will be investigated in the remainder of this thesis.

Near-Field Compensated Higher Order Ambisonics and Spectral Division Method
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Plane Wave
''''''''''

For a spherical secondary source distribution with radius :math:`R_0`
the spherical expansion coefficients of a plane wave  and of the Green’s
function for a point source  are inserted into  and yield [SchultzSpors2014]_ (96)

.. math::

   D_\text{spherical}(\theta_0,\phi_0,\omega) = -A(\omega) \frac{4{\pi}}{R_0^{\,2}}
       \sum_{n=0}^\infty \sum_{m=-n}^n \frac{{\mathrm{i}}^{-n} Y_n^{-m}(\theta_k,\phi_k)}{{\mathrm{i}}{\frac{\omega}{c}}h_n^{(2)}
       \left({\frac{\omega}{c}}R_0\right)} Y_n^m(\theta_0,\phi_0) {\;.}{  \label{eq:D:hoa:pw:3D}}

For a circular secondary source distribution with radius :math:`R_0` the
circular expansion coefficients of a plane wave  and of the Green’s
function for a line source  are inserted into  and yield [AhrensSpors2009a]_ (16)

.. math::

   D_\text{circular}(\phi_0,\omega) = -A(\omega) \frac{2{\mathrm{i}}}{{\pi}R_0}
       \sum_{m=-\infty}^\infty \frac{{\mathrm{i}}^{-m}\Phi_{-m}(\phi_k)}
       {{\,H_{m}^{(2)}\!}({\frac{\omega}{c}}R_0)} \Phi_m(\phi_0) {\;.}{  \label{eq:D:hoa:pw:2D}}

For a circular secondary source distribution with radius :math:`R_0`
and point source as Green’s function the driving function is given by
inserting the spherical expansion coefficients for a plane wave  and a
point source  into  as

.. math::

   D_{\text{circular},\,\twohalfD}(\phi_0,\omega) = -A(\omega) \frac{2}{R_0}
       \sum_{m=-\infty}^\infty \frac{{\mathrm{i}}^{-|m|} \Phi_{-m}(\phi_k)} {{\mathrm{i}}{\frac{\omega}{c}}h_{|m|}^{(2)}\left({\frac{\omega}{c}}R_0\right)} \Phi_m(\phi_0) {\;.}{  \label{eq:D:hoa:pw:2.5D}}

For an infinite linear secondary source distribution located on the
:math:`x`-axis the driving function is given by inserting the linear
expansion coefficients for a point source as Green’s function  and a
plane wave  into  and exploiting the fact that
:math:`(\frac{\omega}{c})^2 - k_{x_\text{s}}` is constant. Assuming
:math:`0 \le |k_{x_\text{s}}| \le |{\frac{\omega}{c}}|` this results
in [AhrensSpors2010]_ (17)

.. math::

   D_{\text{linear},\,\twohalfD}(x_0,\omega) = A(\omega) \frac{4{\mathrm{i}}\chi(k_y,y_\text{ref})}
       {{\,H_{0}^{(2)}\!}(k_y y_\text{ref})} \chi(k_x,x_0) {\;.}{  \label{eq:D:sdm:pw:2.5D}}

Transfered to the temporal domain this results in [AhrensSpors2010]_
(18)

.. math::

   d_{\text{linear},\,\twohalfD}(x_0,t) = h(t) *
       a(t-\frac{x_0}{c}\sin\phi_k-\frac{y_\text{ref}}{c}\sin\phi_k)
       {\;,}\label{eq:d_sdm_pw_25D}

where :math:`\phi_k` denotes the azimuth direction of the plane wave
and

.. math::

   h(t) =
       {    \mathcal{F}^{-1}\left\{\frac{4{\mathrm{i}}}{{\,H_{0}^{(2)}\!}(k_y y_\text{ref})}\right\}} {\;.}

The advantage of this result is that it can be implemented by a simple
weighting and delaying of the signal, plus one convolution with
:math:`h(t)`. The same holds for the driving functions of WFS as
presented in the next section.

Point Source
''''''''''''

For a spherical secondary source distribution with radius :math:`R_0`
the spherical coefficients of a point source  and of the Green’s
function  are inserted into  and yield

.. math::

   \begin{gathered}
       D_\text{spherical}(\theta_0,\phi_0,\omega) = \\
       A(\omega) \frac{1}{R_0^{\,2}} \sum_{n=0}^\infty \sum_{m=-n}^n
       \frac{h_n^{(2)}({\frac{\omega}{c}}r_\text{s}) Y_n^{-m}(\theta_\text{s},\phi_\text{s})}
       {h_n^{(2)}({\frac{\omega}{c}}R_0)} Y_n^m (\theta_0,\phi_0) {\;.}{  \label{eq:D:hoa:ps:3D}}\end{gathered}

For a circular secondary source distribution with radius :math:`R_0` and
point source as secondary sources the driving function is given by
inserting the spherical coefficients  and  into  as

.. math::

   D_{\text{circular},\,\twohalfD}(\phi_0,\omega) = A(\omega) \frac{1}{2{\pi}R_0}
           \sum_{m=-\infty}^{\infty}
           \frac{h_{|m|}^{(2)} ({\frac{\omega}{c}}r_s) \Phi_{-m}(\phi_\text{s})} 
           {h_{|m|}^{(2)} ({\frac{\omega}{c}}R_0)} \Phi_m(\phi_0) {\;.}{  \label{eq:D:hoa:ps:2.5D}}

For an infinite linear secondary source distribution located on the
:math:`x`-axis and point sources as secondary sources the driving
function for a point source is given by inserting the corresponding
linear expansion coefficients  and  into . Assuming
:math:`0 \le |k_x| < |{\frac{\omega}{c}}|` this results in [Ahrens2012]_
(4.53)

.. math::

   \begin{gathered}
       D_{\text{linear},\,\twohalfD}(x_0,\omega) = \\
       A(\omega) \int_{-\infty}^\infty \frac{
       {\,H_{0}^{(2)}\!}\left(\sqrt{({\frac{\omega}{c}})^2-k_x^2} \; (y_\text{ref}-y_\text{s}) \right)
       \chi(-k_x,x_\text{s})} {{\,H_{0}^{(2)}\!}\left(\sqrt{({\frac{\omega}{c}})^2-k_x^2} \;
       y_\text{ref}\right)} \chi(k_x,x_0) \, {\mathop{\mathrm{d}{k_x}}} {\;.}{  \label{eq:D:sdm:ps:2.5D}}\end{gathered}

Line Source
'''''''''''

For a circular secondary source distribution with radius :math:`R_0` and
line sources as secondary sources the driving function is given by
inserting the circular coefficients  and  into  as

.. math::

   D_{\text{circular}}(\phi_0,\omega) = A(\omega) \frac{1}{2{\pi}R_0}
           \sum_{m=-\infty}^{\infty}
           \frac{{\,H_{m}^{(2)}\!}({\frac{\omega}{c}}r_s) \Phi_{-m}(\phi_\text{s})}
           {{\,H_{m}^{(2)}\!}({\frac{\omega}{c}}R_0)} \Phi_m(\phi_0) {\;.}\label{eq:D_nfchoa_ls_2D}

For an infinite linear secondary source distribution located on the
:math:`x`-axis and line sources as secondary sources the driving
function is given by inserting the linear coefficients  and  into  as

.. math::

   D_\text{linear}(x_0,\omega) = A(\omega) \frac{1}{2{\pi}}
       \int_{-\infty}^\infty \chi(k_y,y_s) \chi(k_x,x_0) \, {\mathop{\mathrm{d}{k_x}}} {\;.}

Focused Source
''''''''''''''

Focused sources mimic point or line sources that are located inside the
audience area. For the single-layer potential the assumption is that the
audience area is free from sources and sinks. However, a focused source
is neither of them. It represents a sound field that converges towards a
focal point and diverges afterwards. This can be achieved by reversing
the driving function of a point or line source in time which is known as
time reversal focusing [Yon2003]_.

Nonetheless, the single-layer potential should not be solved for focused
sources without any approximation. In the near field of a source,
evanescent waves [Williams1999]_ (24) appear for spatial frequencies
:math:`k_x > |{\frac{\omega}{c}}|`. They decay exponentially with the
distance from the source. An exact solution for a focused source is
supposed to include these evanescent waves around the focal point. That
is only possible by applying very large amplitudes to the secondary
sources, compare Fig.2a in [SporsAhrens2010]_. Since the evanescent
waves decay rapidly and are hence not influencing the perception, they
can easily be omitted. For corresponding driving functions for focused
sources without the evanescent part of the sound field see [SporsAhrens2010]_
for SDM and [AhrensSpors2009b]_ for NFC-HOA.

In the SFS Toolbox only focused sources in WFS are considered at the moment.

Wave Field Synthesis
~~~~~~~~~~~~~~~~~~~~

In the following, the driving functions for WFS in the frequency and
temporal domain for selected source models are presented. The temporal
domain functions consist of a filtering of the source signal and a
weighting and delaying of the individual secondary source signals. This
property allows for a very efficient implementation of WFS driving
functions in the temporal domain. It is one of the main advantages of
WFS in comparison to most of the NFC-HOA, SDM solutions discussed above.

Plane Wave
''''''''''

By inserting the source model of a plane wave  into  and  it follows

.. math::

   D({{\mathbf{x}}}_0,\omega) = 2 w({{\mathbf{x}}}_0) A(\omega) {\mathrm{i}}{\frac{\omega}{c}}{{\mathbf{n}}}_k{{\mathbf{n}}}_{{{\mathbf{x}}}_0}
       {\mathrm{e}}^{-{\mathrm{i}}{\frac{\omega}{c}}{{\mathbf{n}}}_k{{\mathbf{x}}}_0} {\;,}{  \label{eq:D:wfs:pw}}

.. math::

   D_\twohalfD({{\mathbf{x}}}_0,\omega) = 2g_0 w({{\mathbf{x}}}_0) A(\omega) \sqrt{{\mathrm{i}}{\frac{\omega}{c}}} {{\mathbf{n}}}_k{{\mathbf{n}}}_{{{\mathbf{x}}}_0} 
       {\mathrm{e}}^{-{\mathrm{i}}{\frac{\omega}{c}}{{\mathbf{n}}}_k{{\mathbf{x}}}_0} {\;.}{  \label{eq:D:wfs:pw:2.5D}}

Transfered to the temporal domain via an inverse Fourier transform , it
follows

.. math::

   d({{\mathbf{x}}}_0,t) = 2 a(t) * h(t) * w({{\mathbf{x}}}_0) {{\mathbf{n}}}_k {{\mathbf{n}}}_{{{\mathbf{x}}}_0} {\,\delta\!\left(t -
       \frac{{{\mathbf{n}}}_k{{\mathbf{x}}}_0}{c}\right)} {\;,}{  \label{eq:d:wfs:pw}}

.. math::

   d_\twohalfD({{\mathbf{x}}}_0,t) = 2g_0 a(t) * h_\twohalfD(t) * w({{\mathbf{x}}}_0) {{\mathbf{n}}}_k {{\mathbf{n}}}_{{{\mathbf{x}}}_0}
       {\,\delta\!\left(t - \frac{{{\mathbf{n}}}_k{{\mathbf{x}}}_0}{c}\right)} {\;,}{  \label{eq:d:wfs:pw:2.5D}}

where

.. math:: h(t) = {    \mathcal{F}^{-1}\left\{{\mathrm{i}}{\frac{\omega}{c}}\right\}} {\;,}{  \label{eq:wfs:preeq}}

and

.. math::

   h_\twohalfD(t) = {    \mathcal{F}^{-1}\left\{\sqrt{{\mathrm{i}}{\frac{\omega}{c}}}\right\}}
       {  \label{eq:wfs:preeq:2.5D}}

denote the so called pre-equalization filters in WFS.

The window function :math:`w({{\mathbf{x}}}_0)` for a plane wave as
source model can be calculated after [Spors2008]_

.. math::

   w({{\mathbf{x}}}_0) = 
       \begin{cases}
           1 & {{\mathbf{n}}}_k {{\mathbf{n}}}_{{{\mathbf{x}}}_0} > 0 \\
           0 & \text{else}
       \end{cases}
       {  \label{eq:wfs:pw:selection}}

Point Source
''''''''''''

By inserting the source model for a point source  into  and  it follows

.. math::

   \begin{gathered}
       D({{\mathbf{x}}}_0,\omega) = \\
       \frac{1}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) \left({\mathrm{i}}{\frac{\omega}{c}}+
       \frac{1}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} \right) \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^2}
       {\mathrm{e}}^{-{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;,}{  \label{eq:D:wfs:ps:woapprox}}\end{gathered}

.. math::

   \begin{gathered}
       D_\twohalfD({{\mathbf{x}}}_0,\omega) = \\
       \frac{g_0}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) \sqrt{{\mathrm{i}}{\frac{\omega}{c}}} \left(
       1 + \frac{1}{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}
       \right) \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}) {{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^2} {\mathrm{e}}^{-{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;.}{  \label{eq:D:wfs:ps:woapprox:2.5D}}\end{gathered}

Under the assumption of :math:`|\mathbf{x}_0-\mathbf{x}_\text{s}| \gg 1` and can be approximated by

.. math::

   D({{\mathbf{x}}}_0,\omega) = \frac{1}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) {\mathrm{i}}{\frac{\omega}{c}}\frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\mathrm{e}}^{-{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;,}{  \label{eq:D:wfs:ps}}

.. math::

   \begin{gathered}
       D_\twohalfD({{\mathbf{x}}}_0,\omega) = \\
       \frac{g_0}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) \sqrt{{\mathrm{i}}{\frac{\omega}{c}}}
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\mathrm{e}}^{-{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;,}{  \label{eq:D:wfs:ps:2.5D}}\end{gathered}

which is the traditional formulation of a point source in WFS as given
for the case in [Verheijen1997]_ (2.22a), whereby :math:`r`
corresponds to :math:`|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|` and
:math:`\cos\varphi` to
:math:`\frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}`)
It has the advantage that its temporal domain version could again be
implemented as a simple weighting- and delaying-mechanism. This is the
default driving function for a point source in the SFS
Toolbox.

Transfered to the temporal domain via an inverse Fourier transform  it
follows

.. math::

   d({{\mathbf{x}}}_0,t) = \frac{1}{2{\pi}} a(t) * h(t) * w({{\mathbf{x}}}_0)
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\,\delta\!\left(t-\frac{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}{c}\right)} {\;,}{  \label{eq:d:wfs:ps}}

.. math::

   \begin{gathered}
       d_\twohalfD({{\mathbf{x}}}_0,t) = \\
       \frac{g_0}{2{\pi}} a(t) * h_\twohalfD(t) * w({{\mathbf{x}}}_0)
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\,\delta\!\left(t-\frac{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}{c}\right)} {\;.}{  \label{eq:d:wfs:ps:2.5D}}\end{gathered}

The window function :math:`w({{\mathbf{x}}}_0)` for a point source as
source model can be calculated after [Spors2008]_.

.. math::

   w({{\mathbf{x}}}_0) = 
       \begin{cases}
           1 & ({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}) {{\mathbf{n}}}_{{{\mathbf{x}}}_0} > 0 \\
           0 & \text{else}
       \end{cases}
       {  \label{eq:wfs:ps:selection}}

Line Source
'''''''''''

By inserting the source model for a line source  into  and  and
calculating the derivate of the Hankel function [AbramowitzStegun1972] (9.1.30)
it follows

.. math::

   D({{\mathbf{x}}}_0,\omega) = -\frac{1}{2}A(\omega) w({{\mathbf{x}}}_0) {\mathrm{i}}{\frac{\omega}{c}}\frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}
       {\,H_{1}^{(2)}\!}\left({\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|\right) {\;,}{  \label{eq:D:wfs:ls}}

.. math::

   \begin{gathered}
       D_\twohalfD({{\mathbf{x}}}_0,\omega) = \\
       -\frac{1}{2}g_0 A(\omega) w({{\mathbf{x}}}_0) \sqrt{{\mathrm{i}}{\frac{\omega}{c}}}
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}
       {\,H_{1}^{(2)}\!}\left({\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|\right) {\;.}{  \label{eq:D:wfs:ls:2.5D}}\end{gathered}

Applying
:math:`{\,H_{1}^{(2)}\!}(\zeta) \approx -\sqrt{\frac{2}{{\pi}{\mathrm{i}}\zeta}} {\mathrm{e}}^{-{\mathrm{i}}\zeta}`
for :math:`z\gg1` after [Williams1999]_ (4.23) and transfered to
the temporal domain via an inverse Fourier transform  it follows

.. math::

   d({{\mathbf{x}}}_0,t) = \sqrt{\frac{1}{2{\pi}}} a(t) * h(t) *
       w({{\mathbf{x}}}0) \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\,\delta\!\left(t-\frac{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}{c}\right)} {\;,}{  \label{eq:d:wfs:ls}}

.. math::

   \begin{gathered}
       d_\twohalfD({{\mathbf{x}}}_0,t) = \\
       g_0 \sqrt{\frac{1}{2{\pi}}} a(t) *
       {    \mathcal{F}^{-1}\left\{\sqrt{\frac{c}{{\mathrm{i}}\omega}}\right\}} * w({{\mathbf{x}}}0)
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\,\delta\!\left(t-\frac{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}{c}\right)} {\;.}\label{eq:d:wfs:ls_25D}\end{gathered}

The window function :math:`w({{\mathbf{x}}}_0)` for a line source as
source model can be calculated after [Spors2008]_

.. math::

   w({{\mathbf{x}}}_0) = 
       \begin{cases}
           1 & ({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}) {{\mathbf{n}}}_{{{\mathbf{x}}}_0} > 0 \\
           0 & \text{else}
       \end{cases}
       {  \label{eq:wfs:ls:selection}}

Focused Source
''''''''''''''

As mentioned before, focused sources exhibit a field that converges in a
focal point inside the audience area. After passing the focal point, the
field becomes a diverging one as can be seen in Figure . In order to
choose the active secondary sources, especially for circular or
spherical geometries, the focused source also needs a direction
:math:`{{\mathbf{n}}}_\text{s}`.

The driving function for a focused source are given by the time-reversed
versions of the driving functions for a point source as

.. math::

   \begin{gathered}
       D({{\mathbf{x}}}_0,\omega) = \\
       \frac{1}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) \left({\mathrm{i}}{\frac{\omega}{c}}+
       \frac{1}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} \right) \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^2}
       {\mathrm{e}}^{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;,}{  \label{eq:D:wfs:fs:woapprox}}\end{gathered}

.. math::

   \begin{gathered}
       D_\twohalfD({{\mathbf{x}}}_0,\omega) = \\
       \frac{g_0}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) \sqrt{{\mathrm{i}}{\frac{\omega}{c}}} \left(
       1 + \frac{1}{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}
       \right) \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}) {{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^2} {\mathrm{e}}^{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}
       {\;,}{  \label{eq:D:wfs:fs:woapprox:2.5D}}\end{gathered}

or by using an approximated point source as

.. math::

   D({{\mathbf{x}}}_0,\omega) = \frac{1}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) {\mathrm{i}}{\frac{\omega}{c}}\frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\mathrm{e}}^{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;,}{  \label{eq:D:wfs:fs}}

.. math::

   D_\twohalfD({{\mathbf{x}}}_0,\omega) = \frac{g_0}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) \sqrt{{\mathrm{i}}{\frac{\omega}{c}}}
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\mathrm{e}}^{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;.}{  \label{eq:D:wfs:fs:2.5D}}

As before for other source types, the approximated versions are the
default driving functions for a focused source used in this thesis.

Transfered to the temporal domain via an inverse Fourier transform  it
follows

.. math::

   d({{\mathbf{x}}}_0,t) = \frac{1}{2{\pi}} a(t) * h(t) * w({{\mathbf{x}}}_0)
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\,\delta\!\left(t+\frac{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}{c}\right)} {\;,}{  \label{eq:d:wfs:fs}}

.. math::

   \begin{gathered}
       d_\twohalfD({{\mathbf{x}}}_0,t) = \\
       \frac{g_0}{2{\pi}} a(t) * h_\twohalfD(t) * w({{\mathbf{x}}}_0)
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\,\delta\!\left(t+\frac{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}{c}\right)} {\;.}{  \label{eq:d:wfs:fs:2.5D}}\end{gathered}

In this thesis a focused source always refers to the time-reversed
version of a point source, but a focused line source can be defined in
the same way starting from 

.. math::

   D({{\mathbf{x}}}_0,\omega) = -\frac{1}{2}A(\omega) w({{\mathbf{x}}}_0) {\mathrm{i}}{\frac{\omega}{c}}\frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|}
       {\,H_{1}^{(1)}\!}\left({\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|\right) {\;.}{  \label{eq:D:wfs:fs:ls}}

The window function :math:`w({{\mathbf{x}}}_0)` for a focused source
can be calculated as

.. math::

   w({{\mathbf{x}}}_0) = 
       \begin{cases}
           1 & {{\mathbf{n}}}_\text{s} ({{{\mathbf{x}}}_\text{s}}-{{\mathbf{x}}}_0) > 0 \\
           0 & \text{else}
       \end{cases}
       {  \label{eq:wfs:fs:selection}}

Local Sound Field Synthesis
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The reproduction accuracy of WFS is limited due to practical aspects.
For the audible frequency range the desired sound field can not be
synthesized aliasing-free over an extended listening area, which is
surrounded by a discrete ensemble of individually driven loudspeakers.
However, it is suitable for certain applications to increase
reproduction accuracy inside a smaller (local) listening region while
stronger artifacts outside are permitted. The implemented Local Wave
Field Synthesis method utilizes focused sources as a distribution of
virtual loudspeakers which are placed more densely around the local
listening area. These virtual loudspeakers can be driven by conventional
SFS techniques, like e.g. WFS or NFC-HOA. The results are similar to
band-limited NFC-HOA, with the difference that the form and position of
the enhanced area can freely be chosen within the listening area.

The set of focused sources is treated as a virtual loudspeaker
distribution and their positions :math:`{{{\mathbf{x}}}_\text{fs}}` are
subsumed under :math:`\mathcal{X}_{\mathrm{fs}}`. Therefore, each
focused source is driven individually by
:math:`D_l({{{\mathbf{x}}}_\text{fs}}, \omega)`, which in principle can
be any driving function for real loudspeakers mentioned in previous
sections. At the moment however, only WFS and NFC-HOA driving functions
are supported. The resulting driving function for a loudspeaker located
at :math:`{{\mathbf{x}}}_0` reads

.. math::

   D({{\mathbf{x}}}_0,\omega) = \sum_{{{{\mathbf{x}}}_\text{fs}}\in \mathcal{X}_{\mathrm{fs}}} 
     D_{\mathrm l}({{{\mathbf{x}}}_\text{fs}}, \omega) 
     D_{\mathrm{fs}}({{\mathbf{x}}}_0,{{{\mathbf{x}}}_\text{fs}},\omega) {\;,}{  \label{eq:D:localwfs}}

which is superposition of the driving function
:math:`D_{\mathrm l}{\mathrm{fs}}({{\mathbf{x}}}_0,{{{\mathbf{x}}}_\text{fs}},\omega)`
reproducing a single focused source at
:math:`{{{\mathbf{x}}}_\text{fs}}` weighted by
:math:`D_l({{{\mathbf{x}}}_\text{fs}}, \omega)`. Former is derived by
replacing :math:`{{{\mathbf{x}}}_\text{s}}` with
:math:`{{{\mathbf{x}}}_\text{fs}}` in the WFS driving functions and for
focused sources. This yields

.. math::

   D_{\mathrm{fs}}({{\mathbf{x}}}_0,{{{\mathbf{x}}}_\text{fs}},\omega) =
       \frac{1}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) {\mathrm{i}}{\frac{\omega}{c}}\frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{fs}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{fs}}|^{\nicefrac{3}{2}}}
       {\mathrm{e}}^{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{fs}}|}

and

.. math::

   D_{\mathrm{fs,2.5D}}({{\mathbf{x}}}_0,{{{\mathbf{x}}}_\text{fs}},\omega) = 
       \frac{g_0}{2{\pi}} A(\omega) w({{\mathbf{x}}}_0) \sqrt{{\mathrm{i}}{\frac{\omega}{c}}}
       \frac{({{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}){{\mathbf{n}}}_{{{\mathbf{x}}}_0}}{|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|^{\nicefrac{3}{2}}}
       {\mathrm{e}}^{{\mathrm{i}}{\frac{\omega}{c}}|{{\mathbf{x}}}_0-{{{\mathbf{x}}}_\text{s}}|} {\;.}

for the 2.5D case. For the temporal domain, inverse Fourier transform
yields the driving signals

.. math::

   d({{\mathbf{x}}}_0,t) = \sum_{{{{\mathbf{x}}}_\text{fs}}\in \mathcal{X}_{\mathrm{fs}}} 
       d_{\mathrm l}({{{\mathbf{x}}}_\text{fs}}, t) * d_{\mathrm{fs}}({{\mathbf{x}}}_0,{{{\mathbf{x}}}_\text{fs}}, t) {\;,}{  \label{eq:d:localwfs}}

while
:math:`d_{\mathrm{fs}}({{\mathbf{x}}}_0,{{{\mathbf{x}}}_\text{fs}}, t)`
is derived analogously to from or . At the moment
:math:`d_{\mathrm l}({{{\mathbf{x}}}_\text{fs}}, t)` does only support
driving functions from WFS.

.. vim: filetype=rst spell:
